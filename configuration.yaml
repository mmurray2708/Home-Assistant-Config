homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret lat
  longitude: !secret long
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Los_Angeles
  # Customization file
  customize: !include customize.yaml
  auth_mfa_modules:
    - type: notify
#  auth_providers:
#    - type: homeassistant  
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

frontend:
  themes: !include_dir_merge_named themes/
  extra_html_url:
    - /local/custom_ui/state-card-floorplan.html

pi_hole:
  - host: 10.200.200.122
    api_key: !secret pi_hole_api_key

ifttt:
  key: !secret ifttt_api_key

spotify:
  client_id: !secret spotify_client_id
  client_secret: !secret spotify_client_secret

influxdb:
  host: 10.200.200.122
  

panel_custom:
  - name: Floorplan
    sidebar_title: Floorplan
    sidebar_icon: mdi:home
    url_path: floorplan
    config: !include floorplan.yaml

meross_cloud:
  username: !secret meross_username
  password: !secret meross_password


#image_processing:
#  - platform: tensorflow
#    source: 
#      - entity_id: camera.upstairs_outside
#      - entity_id: camera.driveway
#    file_out:
#      - "/config/www/{{ camera_entity.split('.')[1] }}_latest.jpg"
#    model:
#      graph: /config/tensorflow/frozen_inference_graph.pb
#      categories:
#        - category: person

hacs:
  token: !secret github_token

recorder:
  purge_keep_days: 30
  db_url: mysql://ha:Murray9825@10.200.200.122/ha?charset=utf8


# Show the introduction message on startup.
#introduction:


# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
#  ssl_certificate: !secret ssl_certificate
#  ssl_key: !secret ssl_key
  ip_ban_enabled: false
  login_attempts_threshold: 3
#  base_url: https://murrayha.processtechag.com:8123
  cors_allowed_origins:
    - http://10.200.200.122:5050
# Discover some devices automatically


#rachio:
#  api_key: !secret rachio_api
#  manual_run_mins: 60 

input_boolean:
  outside_motion_light_on:
    name: "Camera motion turned on light"
    initial: off
  garage_door_open:
    name: "Garage Door Open"
    initial: off
  house_fan_auto_turnoff:
    name: "House Fan Auto Turn-Off Enabled"
    initial: off
  vacation:
    name: "Vacation Mode"
    initial: off
  garage_light_master:
    name: "Garage Lights Master Switch"
    initial: off

discovery:


input_number:
  hf1:
    name: House Fan Timer
    initial: 90
    min: 15
    max: 360
    step: 15 
    mode: slider

switch:

  - platform: mqtt
    name: "Freeze"
    state_topic: "aqualinkd/Freeze_Protect"
    command_topic: "aqualinkd/Freeze_Protect/set"
    qos: 1
    payload_on: "0"
    payload_off: "1"
    retain: false
  - platform: mqtt
    name: "Filter Pump"
    state_topic: "aqualinkd/Filter_Pump"
    command_topic: "aqualinkd/Filter_Pump/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false
  - platform: mqtt
    name: "Spa Mode"
    state_topic: "aqualinkd/Spa_Mode"
    command_topic: "aqualinkd/Spa_Mode/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false
  - platform: mqtt
    name: “Waterfall”
    state_topic: "aqualinkd/Aux_1"
    command_topic: "aqualinkd/Aux_1/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false
  - platform: mqtt
    name: “Spa Blower”
    state_topic: "aqualinkd/Aux_2"
    command_topic: "aqualinkd/Aux_2/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false  
  - platform: mqtt
    name: “Lights”
    state_topic: "aqualinkd/Aux_3"
    command_topic: "aqualinkd/Aux_3/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false
  - platform: mqtt
    name: “Cleaner”
    state_topic: "aqualinkd/Aux_4"
    command_topic: "aqualinkd/Aux_4/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false
  - platform: mqtt
    name: "Pool Heater"
    state_topic: "aqualinkd/Pool_Heater"
    command_topic: "aqualinkd/Pool_Heater/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false
  - platform: mqtt
    name: "Spa Heater"
    state_topic: "aqualinkd/Spa_Heater"
    command_topic: "aqualinkd/Spa_Heater/set"
    qos: 1
    payload_on: "1"
    payload_off: "0"
    retain: false
#google_assistant:
#  project_id: home-assistant-223623
#  api_key: !secret google_api_key
#  exposed_domains:
#    - switch
#    - cover
#    - group
#  entity_config:
#    switch.garage_door:
#      name: "garage door"
#      aliases:
#        - Garage_door
#      room: garage

light:
  - platform: group
    name: Garage LED Lights
    entities:
      - light.garage_light_1
      - light.garage_light_2
      - light.garage_light_3

juicenet:
  access_token: !secret juicenet_token

weather:
  - platform: darksky
    api_key: !secret darksky_api_key

#ring:
#  username: !secret ring_username
#  password: !secret ring_password

binary_sensor:
#  - platform: ring
  - platform: wyzesense
    device: auto
  - platform: mqtt
    state_topic: dummy/floorplan/sensor
    name: Floorplan
  - platform: mqtt
    state_topic: "aqualinkd/Pool_Heater/enabled"
    name: "Pool Heat"
    qos: 0
    payload_on: "1"
    payload_off: "0"        
  - platform: mqtt
    state_topic: "aqualinkd/Spa_Heater/enabled"
    name: "Spa Heat"
    qos: 0
    payload_on: "1"
    payload_off: "0"    
  - platform: mqtt
    state_topic: "aqualinkd/Freeze_Protect"
    name: "Freeze"
    qos: 0
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    state_topic: "aqualinkd/Alive"
    name: "AqualinkD"
    qos: 0
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    state_topic: "aqualinkd/Battery"
    name: "Battery"
    qos: 0
    payload_on: "1"
    payload_off: "0"


tplink:
  discovery: false
  switch:
    - host: 10.200.230.34
    - host: 10.200.230.53
    - host: 10.200.230.55
#    - host: 10.200.230.37


amcrest:
  - host: 10.200.200.95
    username: !secret amcrest_username
    password: !secret amcrest_password_95
    name: "Driveway"
    binary_sensors:
      - motion_detected
      - online
    scan_interval: 5
  - host: 10.200.200.166
    username: !secret amcrest_username
    password: !secret amcrest_password_166
    name: "Upstairs_Outside"
    binary_sensors:
      - motion_detected
      - online
    scan_interval: 5

ios:

notify:
  - name: all
    platform: group
    services:
      - service: mobile_app_mmurrays_iphone
      - service: mobile_app_lindseys_iphone

mqtt:
  broker: 10.200.200.122

envisalink:
  host: 10.200.230.29
  panel_type: DSC
  user_name: !secret envisalink_user
  password: !secret envisalink_password
  port: 4025
  evl_version: 3
  keepalive_interval: 60
  zonedump_interval: 30
  timeout: 10
  panic_type: Police
  zones:
    1:
      name: 'Outside Doors'
      type: 'opening'
    2:
      name: 'Windows'
      type: 'opening'
    3:
      name: 'Back Slider'
      type: 'opening'
    6:
      name: 'Upstairs Bathroom'
      type: 'opening'
    7:
      name: 'Downstairs Motion'
      type: 'motion'
  partitions:
    1:
      name: 'Home Alarm'

# Sensors
sensor:
  - platform: influxdb
    host: 10.200.200.122
    queries:
      - name: Outside High 24h
        unit_of_measurement: '°F'
        value_template: '{{ value | round(1) }}'
        group_function: max
        where: '"entity_id" = ''rs191_outdoor_temp'' and time > now() - 24h'
        measurement: '"°F"'
        field: value
        database: home_assistant
      - name: Outside Low 24h
        unit_of_measurement: '°F'
        value_template: '{{ value | round(1) }}'
        group_function: min
        where: '"entity_id" = ''rs191_outdoor_temp'' and time > now() - 24h'
        measurement: '"°F"'
        field: value
        database: home_assistant
  - platform: yr
  - platform: amcrest
#  - platform: ring
  - platform: template
    sensors:
      solaredge_energy_today_kw:
        value_template: '{{(states.sensor.solaredge_energy_today.state | float / 1000) | round(2)}}'
      garage_door_status:
        value_template: >
          {{ 0.0 < states('sensor.garage_door_sensor') | float < 0.3 }}
      small_garage_door_status:
        value_template: >
          {{ 0.0 < states('sensor.garage_door_3_sensor') | float < 0.3 }}
 
  - platform: darksky
    api_key: !secret darksky_api_key
    forecast:
      - 1
    hourly_forecast:
      - 0
      - 1
    monitored_conditions:
      - summary
      - icon
      - temperature
      - apparent_temperature
      - temperature_min
      - temperature_max 
      - humidity
      - precip_probability
      - precip_type
      - precip_intensity
      - wind_speed
      - wind_bearing
      - pressure
      - dew_point
      - precip_accumulation
      - wind_gust
      - nearest_storm_distance
      - nearest_storm_bearing
      - sunrise_time
      - sunset_time
      - moon_phase
      - alerts
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_use
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: processor_use
      - type: last_boot
  - platform: rest
    resource: !secret weatherlink_api_key
    scan_interval: 900
    name: weatherlink
    json_attributes:
    - temp_f
    - davis_current_observation
    - relative_humidity
    - pressure_in
    - wind_mph
    - wind_dir
    value_template: '{{ value_json.weatherlink }}'
  - platform: template
    sensors:
      farm_hum:
        unit_of_measurement: '%'
        value_template: "{{ state_attr('sensor.weatherlink', 'relative_humidity') }}"
  - platform: template
    sensors:
      farm_wind_speed:
        unit_of_measurement: 'mph'
        value_template: "{{ state_attr('sensor.weatherlink', 'wind_mph') }}"
  - platform: template
    sensors:
      farm_wind_dir:
        value_template: "{{ state_attr('sensor.weatherlink', 'wind_dir') }}"
  - platform: template
    sensors:
      farm_temp:
        friendly_name: 'Farm Temp'
        unit_of_measurement: 'F'
        value_template: "{{ state_attr('sensor.weatherlink', 'temp_f') }}"
  - platform: template
    sensors:
      farm_storm_total:
        friendly_name: 'Farm Storm Total'
        unit_of_measurement: 'in'
        value_template: '{{ states.sensor.weatherlink.attributes["davis_current_observation"]["rain_storm_in"] }}'
  - platform: mqtt
    state_topic: "aqualinkd/Aux_1"
    name: "Aux1"
    value_template: "{{ value }}"    
  - platform: mqtt
    state_topic: "aqualinkd/Temperature/Air"
    name: "Air Temp"
    value_template: "{{ value_json }}"    
    unit_of_measurement: "°F"   
  - platform: mqtt
    state_topic: "aqualinkd/Temperature/Spa"
    name: "Spa Temp"
    value_template: "{{ value_json }}"    
    unit_of_measurement: "°F"  
  - platform: mqtt
    state_topic: "aqualinkd/Temperature/Pool"
    name: "Pool Temp"
    value_template: "{{ value_json }}"    
    unit_of_measurement: "°F"     
  - platform: mqtt
    state_topic: "aqualinkd/Pool_Heater/setpoint"
    name: "Pool Temp Set"
    value_template: "{{ value_json }}"    
    unit_of_measurement: "°F"     
  - platform: mqtt
    state_topic: "aqualinkd/Spa_Heater/setpoint"
    name: "Spa Temp Set"
    value_template: "{{ value_json }}"    
    unit_of_measurement: "°F"
  - platform: mqtt
    state_topic: "aqualinkd/Filter_Pump/RPM"
    name: "Pump Speed"
    value_template: "{{ value_json }}"    
    unit_of_measurement: "RPM"
  - platform: mqtt
    state_topic: "aqualinkd/Filter_Pump/Watts"
    name: "Pump Power"
    value_template: "{{ value_json }}"
    unit_of_measurement: "Watts"

climate:
  - platform: mqtt
    name: Pool Heater
    modes:
      - "off"
      - "heat"
    send_if_off: true
    initial: 70
    power_command_topic: "aqualinkd/Pool_Heater/set"
    payload_on: "1"
    payload_off: "0"
    current_temperature_topic: "aqualinkd/Temperature/Pool"
    min_temp: 70
    max_temp: 90
    mode_command_topic: "aqualinkd/Pool_Heater/set"
    mode_state_topic: "aqualinkd/Pool_Heater"
    mode_state_template: >-
      {% set values1 = { '0':'off', '1':'heat'} %}
      {{ values1[value] if value in values1.keys() else 'off' }}
    temperature_command_topic: "aqualinkd/Pool_Heater/setpoint/set"
    temperature_state_topic: "aqualinkd/Pool_Heater/setpoint"
    temperature_state_template: "{{ value_json }}"

  - platform: mqtt
    name: Spa Heater
    modes:
      - "off"
      - "heat"
    send_if_off: true
    initial: 100
    power_command_topic: "aqualinkd/Spa_Heater/set"
    payload_on: "1"
    payload_off: "0"
    current_temperature_topic: "aqualinkd/Temperature/Spa"
    min_temp: 80
    max_temp: 104
    mode_command_topic: "aqualinkd/Spa_Heater/set"
    mode_state_topic: "aqualinkd/Spa_Heater/enabled"
    mode_state_template: >-
      {% set values2 = { '0':'off', '1':'heat'} %}
      {{ values2[value] if value in values2.keys() else 'off' }}
    temperature_command_topic: "aqualinkd/Spa_Heater/setpoint/set"
    temperature_state_topic: "aqualinkd/Spa_Heater/setpoint"
    temperature_state_template: "{{ value_json }}"

cover:
  - platform: template
    covers:
      garage_door_cover:
        friendly_name: "Garage Door"
        value_template: "{{ states('sensor.garage_door_status') }}"
        open_cover: 
          service: switch.turn_on
          data:
            entity_id: switch.garage_door
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garage_door
  - platform: template
    covers:
      small_garage_door_cover:
        friendly_name: "Small Garage Door"
        value_template: "{{ states('sensor.small_garage_door_status') }}"
        open_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garage_door_3
        close_cover:
          service: switch.turn_on
          data:
            entity_id: switch.garage_door_3


camera:
  - platform: amcrest
#  - platform: ring
#  - platform: local_file
#    file_path: /config/www/driveway_latest.jpg
#    name: Driveway_object_detect
#  - platform: local_file
#    file_path: /config/www/upstairs_outside_latest.jpg
#    name: Front_object_detect


# Text to speech
tts:
  - platform: google_translate
    service_name: google_say
    base_url: http://10.200.200.122:8123

zone:
  - name: Solid Networks
    latitude: 37.720768
    longitude: -121.096960
   
  - name: Big Valley
    latitude: 37.699684
    longitude: -121.006674
    radius: 300

  - name: Home
    latitude: !secret lat
    longitude: !secret long
    radius: 200

rest_command:
  kids_internet_off:
    url: https://api.meraki.com/api/v0/networks/L_624874448297658269/groupPolicies/104
    method: PUT
    headers:
      X-Cisco-Meraki-API-Key: !secret meraki_api_key
      Accept: '*/*'
    content_type: 'application/json'
    payload: '{ "groupPolicyId": "104", "name": "Kids Device", "scheduling": { "enabled": false, "monday": { "active": true, "from": "00:00", "to": "24:00" }, "tuesday": { "active": true, "from": "00:00", "to": "24:00" }, "wednesday": { "active": true, "from": "00:00", "to": "24:00" }, "thursday": { "active": true, "from": "00:00", "to": "24:00" }, "friday": { "active": true, "from": "00:00", "to": "24:00" }, "saturday": { "active": true, "from": "00:00", "to": "24:00" }, "sunday": { "active": true, "from": "00:00", "to": "24:00" } }, "bandwidth": { "settings": "network default", "bandwidthLimits": { "limitUp": 5120, "limitDown": 5120 } }, "firewallAndTrafficShaping": { "settings": "custom", "trafficShapingRules": [], "l3FirewallRules": [ { "comment": "Deny All", "policy": "deny", "protocol": "any", "destPort": "any", "destCidr": "any" } ], "l7FirewallRules": [] }, "contentFiltering": { "allowedUrlPatterns": { "settings": "network default", "patterns": [] }, "blockedUrlPatterns": { "settings": "network default", "patterns": [] }, "blockedUrlCategories": { "settings": "append", "categories": [ "meraki:contentFiltering/category/68", "meraki:contentFiltering/category/10", "meraki:contentFiltering/category/76", "meraki:contentFiltering/category/53", "meraki:contentFiltering/category/8", "meraki:contentFiltering/category/18", "meraki:contentFiltering/category/27", "meraki:contentFiltering/category/54", "meraki:contentFiltering/category/46", "meraki:contentFiltering/category/64", "meraki:contentFiltering/category/78", "meraki:contentFiltering/category/32", "meraki:contentFiltering/category/62", "meraki:contentFiltering/category/73", "meraki:contentFiltering/category/37", "meraki:contentFiltering/category/58", "meraki:contentFiltering/category/44", "meraki:contentFiltering/category/71", "meraki:contentFiltering/category/19", "meraki:contentFiltering/category/43", "meraki:contentFiltering/category/48" ] } }, "splashAuthSettings": "network default", "vlanTagging": { "settings": "network default" }, "bonjourForwarding": { "settings": "network default", "rules": [] } }'
    verify_ssl: true

logger:

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
